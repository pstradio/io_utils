# This workflow will install Python dependencies and run tests on
# windows and linux systems with a variety of Python versions

# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Automated Tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *' # daily

jobs:
  build:
    name: Build py${{ matrix.python-version }} @ ${{ matrix.os }} 🐍
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8']
        os: ["ubuntu-latest", "windows-latest"]
        env: ["latest.yml"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v2.0.1
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: environments/${{ matrix.env }}
          activate-environment: io_utils
          auto-activate-base: false
      - name: Print environment infos
        shell: bash -l {0}
        run: |
          conda info -a
          conda list
          pip list
          which pip
          which python
      - name: Export Environment
        shell: bash -l {0}
        run: |
          mkdir -p .artifacts
          filename=env_py${{ matrix.python-version }}_${{ matrix.os }}.yml
          conda env export --no-builds | grep -v "prefix" > .artifacts/$filename
      - name: Install package and test
        shell: bash -l {0}
        run: |
          pip install setuptools_scm
          python setup.py develop
          pytest -m "not geo_test_data"
      - name: Upload Coverage
        shell: bash -l {0}
        run: |
          pip install coveralls && coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
#      - name: Create wheel and dist package
#        shell: bash -l {0}
#        run: |
#          pip install setuptools_scm
#          if [ ${{ matrix.os }} == "windows-latest" ]
#          then
#            # build whls on windows
#            pip install wheel
#            python setup.py bdist_wheel --dist-dir .artifacts/dist
#          else
#            # build dist on linux
#            python setup.py sdist --dist-dir .artifacts/dist
#          fi
#          ls .artifacts/dist
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: .artifacts/*
  coveralls:
    name: Submit Coveralls 👚
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls && coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  env_update:
    name: Update pinned environment files 🤖
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: .artifacts
      - name: Copy yml files into package
        shell: bash -l {0}
        run: |
          cp .artifacts/env_py*.yml environments
      - name: commit and push new files to branch
        uses: actions/checkout@v2
        run: |
          git config --global user.name 'EnvBot 🤖'
          git status ./environments
          if [ -n "$(git status ./environments --porcelain)" ]; then
            git add environments/*
            git commit -m "[skip ci] Update pinned environments"
            git push
          else
            echo "no changes to commit"
          fi
